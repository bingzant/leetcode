class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;

        int n = nums.size();
        sort(nums.begin(), nums.end());

        for (int i = 0; i < n - 2; i++) {
            if (nums[i] > 0) break;
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            int left = i + 1, right = n - 1;
            
            while (left < right) {
                if (left - 1 > i && nums[left] == nums[left - 1]) {
                    left++;
                    continue;
                }
                if (right + 1 < n && nums[right] == nums[right + 1]) {
                    right--;
                    continue;
                }

                int sum = nums[i] + nums[left] + nums[right];
                if (sum > 0) right--;
                else if (sum < 0) left++;
                else {
                    ans.push_back({nums[i], nums[left], nums[right]});
                    left++;
                    right--;
                }
            }
        }

        return ans;
    }
};
