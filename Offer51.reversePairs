class Solution {
public:
    int reversePairs(vector<int>& nums) {
        int n = nums.size();
        vector<int> tmps(n);
        return mergeSort(nums, tmps, 0, n-1);
    }
private:
    int mergeSort(vector<int>& nums, vector<int>& tmps, int left, int right){
        if(left>=right) return 0;
        int mid = (left+right)/2;
        int count = mergeSort(nums, tmps, left, mid) + mergeSort(nums, tmps, mid+1, right);
        int l=left, r=mid+1, i;
        for(i=left;i<=right;++i) tmps[i]=nums[i];
        i=l;
        while(l<mid+1 && r<right+1){
            if(tmps[l]>tmps[r]){
                nums[i] = tmps[r++];
                count += mid+1-l;
            }
            else{
                nums[i] = tmps[l++];
            }
            ++i;
        }
        while(l<mid+1) nums[i++] = tmps[l++];
        while(r<right+1) nums[i++] = tmps[r++];
        return count;
    }
};
