class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.empty() || k<=0 ) return {};
        deque<int> q;
        vector<int> ans;
        int i;
        for(i=0; i<k; ++i){
            while(!q.empty() && nums[i]>=nums[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
        }
        ans.push_back(nums[q.front()]);
        for(i=k; i<nums.size(); ++i){
            while(!q.empty() && nums[i]>=nums[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
            if(q.front()<=i-k) q.pop_front();
            ans.push_back(nums[q.front()]);
        }
        return ans;
    }
};
