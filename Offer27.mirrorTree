/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* mirrorTree(TreeNode* root) {
        if(root){
            subMirror(root);
        }
        return root;
    }
private:
    void subMirror(TreeNode* node){
        if(!node || ((!node->left)&&(!node->right))) return;
        TreeNode* tmp;
        tmp = node->left;
        node->left = node->right;
        node->right = tmp;
        subMirror(node->left);
        subMirror(node->right);
    }
};
