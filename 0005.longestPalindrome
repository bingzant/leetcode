class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.size();
        int left = 0, right = 0, maxLen = 0;
        vector<vector<bool>> dp(n, vector<bool>(n, false));
        for (int i = n - 1; i >=0; i--) {
            for (int j = i; j < n; j++) {
                if (s[i] == s[j]) {
                    if (j - i <= 2) {
                        dp[i][j] = true;
                    } else {
                        dp[i][j] = dp[i + 1][j - 1];
                    }
                    if (dp[i][j] == true) {
                        int len = j - i + 1;
                        if(len > maxLen) {
                            left = i;
                            right = j;
                            maxLen = len;
                        }
                    }
                }
            }
        }
        return s.substr(left, maxLen);
    }

};
